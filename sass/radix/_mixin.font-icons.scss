// prefix iconic
@mixin i-class($name,$pua) {
  .#{$classPrefix}#{$name}:before { 
    content: "\f#{$pua}";
  }
}

@mixin ie-class($name,$pua) {
  .#{$classPrefix}#{$name} { 
    *zoom: expression( this.runtimeStyle['zoom'] = "1", this.innerHTML = "&#xf#{$pua};"); 
  }
}

@mixin fonts($fontFileName, $fontName){
  @font-face {
    font-family: $fontName;
    src: url('#{$fontFileName}.eot');
    src: url('#{$fontFileName}.eot?#iefix') format('embedded-opentype'),
         url('#{$fontFileName}.woff') format('woff'),
         url('#{$fontFileName}.ttf') format('truetype'),
         url('#{$fontFileName}.svg##{$fontName}') format('svg');
    font-weight: normal;
    font-style: normal;}
}

@mixin face {
  @each $fontNames in SocialFoundicons, AccessibilityFoundicons, GeneralFoundicons, GeneralEnclosedFoundicons, FontAwesome{
    
    @if $fontNames == SocialFoundicons{
      @include fonts($fontFileNameSocial, $fontNameSocial);
    }
    @else if $fontNames == AccessibilityFoundicons{
      @include fonts($fontFileNameAccessibility, $fontNameAccesibility);
    }
    @else if $fontNames == GeneralFoundicons{
      @include fonts($fontFileNameGeneral, $fontNameGeneral);
    }
    @else if $fontNames == GeneralEnclosedFoundicons{
      @include fonts($fontFileNameEnclosed, $fontNameEnclosed);
    }
    @else if $fontNames == FontAwesome{
      //@include fonts($fontFileNameAwesome, $fontNameAwesome);
      @font-face {
        font-family: $fontNameAwesome;
        src: url('#{$fontAwesomePath}/fontawesome-webfont.eot?v=3.0.1');
        src: url('#{$fontAwesomePath}/fontawesome-webfont.eot?#iefix&v=3.0.1') format("embedded-opentype"),
        url('#{$fontAwesomePath}/fontawesome-webfont.woff?v=3.0.1') format("woff"),
        url('#{$fontAwesomePath}/fontawesome-webfont.ttf?v=3.0.1') format("truetype");
        font-weight: normal;
        font-style: normal;
      }
    }
  }
}